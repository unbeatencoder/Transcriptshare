/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}

rule createMerkleRootThroughTx {
    description: "Allow participant to create merkle Root only through upload Transript"
    participant(p): "org.daiict.mynetwork.University"
    operation: CREATE
    resource(r): "org.daiict.mynetwork.MerkleRoot"
    transaction(tx): "org.daiict.mynetwork.uploadTranscript"
    condition:(true)
    action: ALLOW 
}
rule universityRead{
	description: "Allow universities to read their own merkle Root Data"
    participant(p):"org.daiict.mynetwork.University"
    operation: READ
    resource(r):"org.daiict.mynetwork.MerkleRoot"
    condition:( r.owner.getIdentifier() == p.getIdentifier())
    action: ALLOW
}
rule UniversityreadSystem {
description: "Grant ALL participant full access to system resources"
participant: "org.daiict.mynetwork.University"
operation: READ
resource: "org.hyperledger.composer.system.**"
action: ALLOW
}
